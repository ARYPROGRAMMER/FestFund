{
  "name": "festfund",
  "version": "1.0.0",
  "description": "Zero-knowledge private fundraising platform with milestone verification",
  "main": "index.js",
  "scripts": {
    "setup": "node scripts/setup.js",
    "verify": "node verify.js",
    "install-all": "npm install && cd frontend && npm install && cd ../backend && npm install && cd ..",
    "dev": "concurrently \"npm run backend\" \"npm run frontend\"",
    "dev:full": "concurrently \"npm run hardhat\" \"npm run backend\" \"npm run frontend\"",
    "start": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npm start",
    "frontend": "cd frontend && npm run dev",
    "backend": "cd backend && npm run dev",
    "hardhat": "npx hardhat node",
    "compile": "npx hardhat compile",
    "compile:zk": "cd zk && ./compile.sh",
    "compile:zk:windows": "cd zk && compile.bat",
    "deploy": "npx hardhat run scripts/deploy.js --network localhost",
    "deploy:setup": "node scripts/deploy-setup.js",
    "test": "npx hardhat test",
    "test:all": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "test:own-keys": "node -e \"require('dotenv').config(); process.env.ZK_MODE='own-keys'; const { midnightIntegration } = require('./backend/utils/midnightIntegration'); midnightIntegration.initialize().then(async () => { console.log('=== OWN KEYS MODE TEST ==='); const start = Date.now(); const result = await midnightIntegration.generateDonationCommitment(100, 12345, 456, 50); const end = Date.now(); console.log('✅ Own keys ZK proof generated in', end - start, 'ms'); console.log('✅ Success:', result.success); console.log('✅ ZK Mode:', result.metadata.zkMode); process.exit(0); });\"",
    "test:midnight": "node -e \"require('dotenv').config(); process.env.ZK_MODE='midnight-network'; const { midnightIntegration } = require('./backend/utils/midnightIntegration'); midnightIntegration.initialize().then(async () => { console.log('=== MIDNIGHT NETWORK MODE TEST ==='); const start = Date.now(); const result = await midnightIntegration.generateDonationCommitment(100, 12345, 456, 50); const end = Date.now(); console.log('✅ Midnight ZK proof generated in', end - start, 'ms'); console.log('✅ Success:', result.success); console.log('✅ ZK Mode:', result.metadata.zkMode); process.exit(0); }).catch(err => { console.error('❌ Midnight mode requires API setup:', err.message); process.exit(1); });\"",
    "start:own-keys": "ZK_MODE=own-keys npm run dev",
    "start:midnight": "ZK_MODE=midnight-network npm run dev",
    "start:midnight-default": "npm run dev",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "demo-seed": "node scripts/demoSeed.js",
    "clean": "rimraf node_modules backend/node_modules frontend/node_modules",
    "reset": "npm run clean && npm run install-all"
  },
  "keywords": [
    "zk",
    "fundraising",
    "midnight",
    "blockchain"
  ],
  "author": "FestFund Team",
  "license": "Apache-2.0",
  "devDependencies": {
    "@nomicfoundation/hardhat-toolbox": "^4.0.0",
    "concurrently": "^8.2.2",
    "hardhat": "^2.19.0"
  },
  "dependencies": {
    "@midnight-ntwrk/compact-runtime": "^0.8.1",
    "@midnight-ntwrk/midnight-js-contracts": "^2.0.2",
    "@midnight-ntwrk/wallet": "^5.0.0",
    "@midnight-ntwrk/wallet-sdk-hd": "^2.0.0",
    "@midnight-ntwrk/zswap": "^4.0.0",
    "@openzeppelin/contracts": "^5.0.0",
    "circomlib": "^2.0.5",
    "dotenv": "^16.6.1",
    "fs-extra": "^11.3.1",
    "inquirer": "^12.9.4",
    "rimraf": "^6.0.1",
    "snarkjs": "^0.7.3"
  }
}
